import React, {useEffect, useRef, useState} from "react";
import QrCreator from "qr-creator";
import {useTheme} from "@mui/material/styles";
import {Box, Divider, FormHelperText, Grid, List, ListItem, Stack, TextField, Typography} from "@mui/material";
import {useForm} from "@/helpers/general";
import toast from "react-hot-toast";
import {useRouter} from "@/hooks/use-router";
import {dashboardRoutes, mainRoutes} from "@/routes/main";
import {updateTfa} from "@/slices/userSlice";
import {useDispatch} from "react-redux";

export function TFA({secret, qrString}) {
    const qr = useRef(null);
    const [simple, setSimple] = useState(false);
    const router = useRouter();
    //
    const {data, setData, patch, errors, processing, recentlySuccessful} = useForm({
        code: '', secret: secret,
    });
    const theme = useTheme();

    useEffect(() => {
        setData({
            ...data,
            secret: secret,
        })
    }, [secret]);

    useEffect(() => {
        qr.current.innerHTML = '';
        QrCreator.render({
            text: qrString,
            radius: simple === true ? 0 : 0.5, ecLevel: 'L', // L, M, Q, H
            fill: {
                type: 'linear-gradient', // or 'linear-gradient'
                position: [0, 1, 1, 0, 1, 1],
                colorStops: [[0, theme.palette.mode == 'dark' ? theme.palette.primary.main : '#787878'], // [0.5, '#f11fff'],
                    [1, theme.palette.mode == 'dark' ? '#ff8585' : '#414141'],]
            }, background: null, // color or null for transparent
            size: 300 // in pixels
        }, qr.current);
    }, [secret, simple]);
    const handleInput = (e) => {
        setData({
            ...data,
            'code': e.target.value
        });
    };

    useEffect(() => {
        if (data.code.length >= 6) {
            patch(route('api.tfa.store'));
        }
    }, [data.code])
    const dispatch = useDispatch();

    useEffect(() => {
        if (recentlySuccessful == true) {
            toast.success('Tfa enabled.');
            dispatch(updateTfa({
                tfa: true,
            }))
            router.replace(dashboardRoutes.settings);

        }
    }, [recentlySuccessful])

    return <Grid container>
        <Grid xs={12} md={6}>
            <Typography variant={'body1'}>
                We take the security of your account very seriously and to further enhance it, we have implemented
                Two-Factor Authentication (2FA) on our platform. It is required for all users to pass 2FA to access
                their
                account.
            </Typography>
            <Typography variant={'body1'}>
                Please follow the steps to complete the 2FA setup process:
            </Typography>

            <Divider/>
            <List spacing={3}
                  sx={{
                      listStyleType: 'disc', pl: 2,
                  }}
            >
                <ListItem>
                    Download and install a 2FA app such as Google Authenticator or Authy on your smartphone.
                </ListItem>
                <ListItem>
                    Open the app and scan the QR code provided in your account settings.
                </ListItem>
                <ListItem>
                    Enter the code generated by the app in the 2FA field in your account settings.
                </ListItem>
            </List>
            <Divider/>

            <Typography variant={'body1'}>
                Once you have completed these steps, you will be prompted to enter a 2FA code each time you log in to
                your
                account. This adds an extra layer of security to your account and helps protect it from unauthorized
                access.
            </Typography>

            <Typography variant={'body1'}>
                If you have any questions or concerns regarding the 2FA setup process, please do not hesitate to contact
                our
                support team for assistance.
            </Typography>

            <Typography variant={'body1'}>
                Thank you for your cooperation in keeping your account safe and secure!
            </Typography>
        </Grid>
        <Grid xs={12} md={6}>

            <Box sx={{display: 'flex'}} justifyContent={'center'} alignItems={'center'}>
                <Box py={4} sx={{display: 'inline-flex'}} ref={qr} onMouseOver={() => {
                    setSimple(true);
                }} onMouseLeave={() => {
                    setSimple(false);
                }}></Box>
            </Box>

            <Box sx={{display: 'flex'}} justifyContent={'center'} alignItems={'center'}>
                <Stack spacing={2}>
                    <FormHelperText>Enter code from Google Authenticator app.</FormHelperText>
                    <TextField id={'tfaCode'} error={errors.code} helperText={errors.code} value={data.code}
                               onChange={handleInput} type='text'/>
                </Stack>
            </Box>
        </Grid>


    </Grid>;
}
